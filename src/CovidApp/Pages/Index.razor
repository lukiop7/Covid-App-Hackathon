@using ChartJs.Blazor.BarChart
@using NPOI.OpenXmlFormats.Spreadsheet
@using System.Text.RegularExpressions

@page "/"

<div class="alert alert-warning" role="alert">
    <h3 class="alert-heading">Statystyki Covid w Polsce (@date.Date)</h3>

    <div style="width:100%; display: inline-block; text-align: center;">
        <p> Zakażonych: @total</p>
        <p> Na 10 tysięcy: @cases10k</p>
        <p> Śmierci: @deaths</p>
    </div>

    <hr>
    <p class="mb-0">Informacje dostarczane przez ministerstwo zdrowia.</p>
</div>

<div class="index-maindiv">
    <div class="index-charts">
        <Chart Config="@ZakazeniaPolska"></Chart>



    </div>
</div>
<div class="clearfix"></div>


@*<button class="btn btn-primary" @onclick="ChangeValues">Click me</button>*@

@code {

    List<CovidStatsDownloader.PolandStats> polandStats = new List<CovidStatsDownloader.PolandStats>();

    DateTime date;
    string deaths, total, cases10k;
    private BarConfig ZakazeniaPolska;

    Random random = new Random();


    private async Task FetchData()
    {
        polandStats = await CovidStatsDownloader.Program.GetPolandStatsAsync();

        date = polandStats.Last().FileDate;

        deaths = (polandStats.Last().FileStatsList.First().Deaths == null) ? "brak danych" : "" + polandStats.Last().FileStatsList.First().Deaths;
        total = (polandStats.Last().FileStatsList.First().TotalCases == null) ? "brak danych" : "" + polandStats.Last().FileStatsList.First().TotalCases;
        cases10k = (polandStats.Last().FileStatsList.First().Cases10k == null) ? "brak danych" : "" + polandStats.Last().FileStatsList.First().Cases10k;

    }


    protected override async Task OnInitializedAsync()

    {
        ZakazeniaPolska = new BarConfig
        {
            Options = new BarOptions
            {
                Responsive = true,
                Legend = new Legend
                {
                    Position = Position.Bottom,
                    Display = false
                },
                Title = new OptionsTitle
                {
                    Display = true,
                    Text = "Ilość zakażeń w Polsce"
                },
                Scales = new BarScales
                {
                    XAxes = new List<CartesianAxis>
                    {
                        //new ChartJs.Blazor.Common.Axes.LinearCartesianAxis
                        //{
                        //    Ticks = new LinearCartesianTicks()
                        //    {
                        //       BeginAtZero = true,
                        //    }
                        //}
                    },
                    YAxes = new List<CartesianAxis>
                    {
                        new ChartJs.Blazor.Common.Axes.LinearCartesianAxis
                        {
                            Ticks = new LinearCartesianTicks()
                            {
                               BeginAtZero = true,
                               SuggestedMax = 20000,
                            }
                        }
                    },
                }
            },


        };

        await FetchData();
        SetTestsPerformed();
        await Task.Delay(100);
        this.StateHasChanged();

    }

    private void SetTestsPerformed()
    {
        List<double> tmp = new List<double>();
        polandStats = polandStats.OrderByDescending(o => o.FileDate).ToList();

        foreach (var VARIABLE in polandStats)
        {
            tmp.Add(VARIABLE.FileStatsList[0].TotalCases.Value);
        }

        //var dd = tmp.Select(x => (double)x).ToArray();
        double[] ddd = new double[tmp.Count()];
        for (int i = 0; i < tmp.Count(); i++)
        {
            ddd[i] = tmp[i];
        }


        var colorlist = Colors.GradientColors(ddd.Count(), 220, 100, 100);

        for (int i = 0; i < ddd.Count(); i++)
        {

            IDataset<double> dat = new BarDataset<double>(new[] { ddd[ddd.Count() - i - 1] })
            {
                Label = "" + polandStats[ddd.Count() - i - 1].FileDate.Date,
                BackgroundColor = colorlist[ddd.Count() - i - 1],
                BorderWidth = 1,
            };
            ZakazeniaPolska.Data.Datasets.Add(dat);

        }
    }

}


