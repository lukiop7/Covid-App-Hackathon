@using ChartJs.Blazor.BarChart
@using NPOI.OpenXmlFormats.Spreadsheet
@using System.Text.RegularExpressions

@page "/"

<div class="alert alert-warning" role="alert">
    <p class="Warining-container"><b>Statystyki Covid w Polsce</b> (@datestring)</p>

    @*<div style="width:100%; display: grid; text-align: center;">
        <div style="width:33%;"><p> Zakażonych: @total</p></div>
        <div style="width:33%"><p> Na 10 tysięcy: @cases10k</p></div>
        <div style="width:33%;"><p> Śmierci: @deaths</p></div>
    </div>*@

    <div class="Warining-container" style="text-align: center; width: 100%; box-sizing:border-box; float: left;">
        <div class="row">
            <div class="col-sm">
                <p><b> Zakażonych: <p>@total</p></b>  @*<i class="arrow-up"></i>*@ </p>
            </div>
            <div class="col-sm">
                <p> <b>Na 10 tysięcy: <p>@cases10k</p></b>  @*<i class="arrow-up"></i>*@  </p>
            </div>
            <div class="col-sm">
                @*<i class="arrow-up" style="color:red"></i>*@
                <p> <b> Śmierci: <p>@deaths </p></b> </p>
            </div>
        </div>
    </div>

    <hr>
    <p class="mb-0">Informacje dostarczane przez ministerstwo zdrowia.</p>
</div>


<div style="text-align: center; width: 100%; box-sizing:border-box;">
    <div style="display:inline-flex">
        <img all="" src="logo1.png" style="height:150px; margin-top: 50px;" /> <b style="margin-top:110px;">Poland Covid Center</b>
    </div>
    <div>
        <p style="text-align:center;">
            W dzisiejszych, trudnych czasach niezwykle ważny jest łatwy i szybki dostęp do informacji. Covid Poland Center powstało, aby zgromadzić w jednym miejscu wszystkie niezbęde dla ciebie wiadomości. 
            W odpowiednich zakładkach dostępne są wszelakie dane statystyczne, pokazujące przebieg pandemii w Polsce i na świecie. Wszystkie z gromadzonych tutaj danych są pobierane z rządowej strony www.gov.pl,
            lub innych zaufanych i rzetelnych źródeł zagranicznych. W trosce o twoje zdrowie, zamieszczone zostały tutaj również informację o tym, jak prawidłowo rozpoznać objawy covid-19, oraz aktualną listę szpitali 
            zakaźnych, czy punktów pobrań. 
        </p>
    </div>
</div>


<div class="index-maindiv">
    <div class="index-charts">
        <Chart Config="@ZakazeniaPolska"></Chart>



    </div>
</div>
<div class="clearfix"></div>


@*<button class="btn btn-primary" @onclick="ChangeValues">Click me</button>*@

@code {

    List<CovidStatsDownloader.PolandStats> polandStats = new List<CovidStatsDownloader.PolandStats>();

    DateTime date;
    string deaths, total, cases10k, datestring;
    int de = 0, to = 0, ca = 0;
    private BarConfig ZakazeniaPolska;

    Random random = new Random();


    private async Task FetchData()
    {
        polandStats = await CovidStatsDownloader.Program.GetPolandStatsAsync();

        date = polandStats.Last().FileDate;
        datestring = (date.Date+"").Split(" ").First();

        de = (polandStats.Last().FileStatsList.First().Deaths == null) ? -1 : (int)polandStats.Last().FileStatsList.First().Deaths;
        to = (polandStats.Last().FileStatsList.First().TotalCases == null) ? -1 : (int) polandStats.Last().FileStatsList.First().TotalCases;
        ca = (polandStats.Last().FileStatsList.First().Cases10k == null) ? -1 : (int) polandStats.Last().FileStatsList.First().Cases10k;

        if (de > 9999)
        {
            deaths = " " + (de / 1000) + " tys.";
        }
        else
        {
            deaths = " " + de;
        }
        if (de < 0)
        {
            deaths = " brak danych";
        }

        if (to > 9999)
        {
            total = " " + (to / 1000) + " tys.";
        }
        else
        {
            total = " " + to;
        }
        if (to < 0)
        {
            total = " brak danych";
        }

        if (ca > 9999)
        {
            cases10k = " " + (ca / 1000) + " tys.";
        }
        else
        {
            cases10k = " " + ca;
        }
        if (ca < 0)
        {
            cases10k = " brak danych";
        }
    }


    protected override async Task OnInitializedAsync()

    {
        ZakazeniaPolska = new BarConfig
        {
            Options = new BarOptions
            {
                Responsive = true,
                Legend = new Legend
                {
                    Position = Position.Bottom,
                    Display = false
                },
                Title = new OptionsTitle
                {
                    Display = true,
                    Text = "Ilość zakażeń w Polsce"
                },
                Scales = new BarScales
                {
                    XAxes = new List<CartesianAxis>
                    {
                        //new ChartJs.Blazor.Common.Axes.LinearCartesianAxis
                        //{
                        //    Ticks = new LinearCartesianTicks()
                        //    {
                        //       BeginAtZero = true,
                        //    }
                        //}
                    },
                    YAxes = new List<CartesianAxis>
                    {
                        new ChartJs.Blazor.Common.Axes.LinearCartesianAxis
                        {
                            Ticks = new LinearCartesianTicks()
                            {
                               BeginAtZero = true,
                               SuggestedMax = 20000,
                            }
                        }
                    },
                }
            },


        };

        await FetchData();
        SetTestsPerformed();
        await Task.Delay(100);
        this.StateHasChanged();

    }

    private void SetTestsPerformed()
    {
        List<double> tmp = new List<double>();
        polandStats = polandStats.OrderByDescending(o => o.FileDate).ToList();

        foreach (var VARIABLE in polandStats)
        {
            tmp.Add(VARIABLE.FileStatsList[0].TotalCases.Value);
        }

        //var dd = tmp.Select(x => (double)x).ToArray();
        double[] ddd = new double[tmp.Count()];
        for (int i = 0; i < tmp.Count(); i++)
        {
            ddd[i] = tmp[i];
        }


        var colorlist = Colors.GradientColors(ddd.Count(), 220, 100, 100);

        for (int i = 0; i < ddd.Length; i++)
        {

            IDataset<double> dat = new BarDataset<double>(new[] { ddd[ddd.Count() - i - 1] })
            {
                Label = "" + polandStats[ddd.Count() - i - 1].FileDate.Date,
                BackgroundColor = colorlist[ddd.Count() - i - 1],
                BorderWidth = 1,
            };
            ZakazeniaPolska.Data.Datasets.Add(dat);

        }
    }

}


